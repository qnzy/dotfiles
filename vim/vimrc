" automatically reload vimrc when it's saved
"au BufWritePost .vimrc so ~/.vimrc

let mapleader="," " leader is comma
syntax enable " enable syntax highlighting

set tabstop=4 " number of visual spaces per TAB
set softtabstop=4 " number of spaces in tab when editing
set expandtab " tabs are spaces
set number " show line numbers
set showcmd " show command in bottom bar
set cursorline " highlight current line
set wildmenu " visual autocomplete
set lazyredraw " redraw only when we need to
set showmatch " highlight matching [{()}]
set colorcolumn=80 " highlight colum 80
set tags=./tags,tags;
set ignorecase
set smartcase
set autoindent
"set smartindent
set cindent

" CtrlP settings
let g:ctrlp_max_files=0
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_by_filename = 1
let g:ctrlp_match_window = 'bottom,order:ttb'
let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 0
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'

" move vertically by visual line
nnoremap j gj
nnoremap k gk

" quick escape
inoremap jj <esc>

" move to beginning/end of line
nnoremap B ^
nnoremap E $

" remove search highlighting
nnoremap <leader><space> :nohlsearch<CR>
set hlsearch " highlight matches
set incsearch " incremental search

" toggle quickfix
nnoremap <leader>q :cw<CR>

" make
nnoremap <leader>m :w<CR>:make<CR>:cw<CR>

" switch buffer (use tab expand)
nnoremap <leader>b :buf 

" Ack
nnoremap <leader>a :Ag 

" better indent
vnoremap < <gv 
vnoremap > >gv

" easy split navigation
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" pathogen
call pathogen#infect()
call pathogen#helptags()

" colorscheme
set background=dark
let g:solarized_termtrans=1
let g:solarized_termcolors=256
let g:solarized_contrast="high"
let g:solarized_visibility="high"
colorscheme solarized

" Tagbar
nmap <F8> : TagbarToggle<CR>
let g:tagbar_type_vhdl = {
    \ 'ctagstype': 'vhdl',
    \ 'kinds' : [
        \'d:prototypes',
        \'b:package bodies',
        \'e:entities',
        \'a:architectures',
        \'t:types',
        \'p:processes',
        \'f:functions',
        \'r:procedures',
        \'c:constants',
        \'T:subtypes',
        \'r:records',
        \'C:components',
        \'P:packages',
        \'l:locals',
        \'s:signals'
    \]
\}

